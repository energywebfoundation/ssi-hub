version: "3.4"

services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: ./docker/dev/Dockerfile
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - ${NESTJS_PORT}:${NESTJS_PORT}
      - 9229:9229
    command: npm run start:dev
    env_file:
      - .env
    networks:
      - main
    depends_on:
      - dgraph
      - zero
      - nats
      - ratel
      - postgres
  postgres:
    image: postgres:12-alpine
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USERNAME: ${DB_USERNAME}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_PORT: ${DB_PORT}
    networks:
      - main
    ports:
      - 5432:5432
  zero:
    container_name: dgraph_zero
    image: dgraph/dgraph:${DGRAPH_VERSION}
    volumes:
      - dgraph:/dgraph
    restart: on-failure
    command: dgraph zero --my=zero:5080
    networks:
      - main
  dgraph:
    container_name: dgraph_alpha
    image: dgraph/dgraph:${DGRAPH_VERSION}
    volumes:
      - dgraph:/dgraph
    restart: on-failure
    ports:
      - 8080:8080
    command: dgraph alpha --my=dgraph:7080 --lru_mb=2048 --zero=zero:5080
    networks:
      - main
  ratel:
    container_name: dgraph_ratel
    image: dgraph/dgraph:${DGRAPH_VERSION}
    volumes:
      - dgraph:/dgraph
    ports:
      - 8000:8000
    command: dgraph-ratel
  nats:
    container_name: nats
    image: synadia/nats-server:nightly
    volumes:
      - ./config/:/etc/nats
    command: "-c /etc/nats/nats.conf"
    networks:
      - main
    ports:
      - "4222:4222"
      - "8222:8222"
      - "9222:9222"
  redis:
    container_name: redis
    image: redis:${REDIS_VERSION}
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - $PWD/redis-data:/var/lib/redis
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      - main
networks:
  main:

volumes:
  dgraph:
