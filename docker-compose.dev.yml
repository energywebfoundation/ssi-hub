version: '3.4'

services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: ./docker/dev/Dockerfile
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - ${NESTJS_PORT}:${NESTJS_PORT}
      - 9229:9229
    command: npm run start:dev
    env_file:
      - .env
    networks:
      - main
    depends_on:
      - nats
      - redis
      - postgres
  postgres:
    container_name: postgres
    image: postgres:12-alpine
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USERNAME: ${DB_USERNAME}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_PORT: ${DB_PORT}
    networks:
      - main
    ports:
      - 5432:5432
  nats:
    container_name: nats
    image: synadia/nats-server:nightly
    volumes:
      - ./config/:/etc/nats
    command: '-c /etc/nats/nats.conf'
    networks:
      - main
    ports:
      - '4222:4222'
      - '8222:8222'
      - '9222:9222'
  redis:
    container_name: redis
    image: redis:${REDIS_VERSION}
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - $PWD/redis-data:/var/lib/redis
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      - main
networks:
  main:

volumes:
  dgraph:

