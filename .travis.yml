os: linux
branches:
  only:
  - develop
  - master
language: node_js
dist: bionic
services:
- docker
before_install:
- export AWS_REGION=us-east-1
- export AWS_ECR_REPOSITORY=$DOCKER_REGISTRY/$DOCKER_REPOSITORY
- export DOCKER_TAG=$TRAVIS_COMMIT
- export SENTRY_RELEASE=$TRAVIS_COMMIT
install:
- if ! [ -x "$(command -v aws)" ]; then curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip"
  -o "awscliv2.zip" ; unzip awscliv2.zip ; sudo ./aws/install ; rm -rf ./aws; rm awscliv2.zip;
  fi
- docker build --build-arg SENTRY_RELEASE --build-arg SENTRY_AUTH_TOKEN -t $AWS_ECR_REPOSITORY:$DOCKER_TAG
  -t $AWS_ECR_REPOSITORY:latest -f ./docker/prod/Dockerfile .
- aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin
  $AWS_ECR_REPOSITORY
- docker push $AWS_ECR_REPOSITORY:$DOCKER_TAG
- docker push $AWS_ECR_REPOSITORY:latest
- docker logout
script:
- echo 'No tests provided'
before_deploy:
- openssl aes-256-cbc -K $encrypted_db2095f63ba3_key -iv $encrypted_db2095f63ba3_iv
  -in deploy_rsa.enc -out deploy_rsa -d
- chmod 600 deploy_rsa
- envsubst < .env.ci > .env.ci.dist
- mv makefile.prod makefile
- scp -P $SERVER_PORT -i deploy_rsa -o StrictHostKeyChecking=no -r .env.ci.dist ./universal-resolver
  docker-compose.prod.yml deploy.sh makefile $SERVER_USER@$SERVER_HOST:$APP_DIRECTORY/
deploy:
  provider: script
  script: ssh -p $SERVER_PORT -i deploy_rsa -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST
    "cd $APP_DIRECTORY; bash ./deploy.sh $AWS_ACCESS_KEY_ID $AWS_SECRET_ACCESS_KEY
    $AWS_REGION $AWS_ECR_REPOSITORY"
  skip_cleanup: true
  on:
    all_branches: true
